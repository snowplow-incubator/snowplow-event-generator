name: CI

on:
  push:
    tags:
      - '*'
    branches:
      - master
      - develop
  pull_request:

jobs:
  deploy:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: coursier/cache-action@v6
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: adopt
      - name: Get current version
        id: ver
        run: echo "::set-output name=tag::${GITHUB_REF#refs/tags/}"
      - name: Docker login
        run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      - name: Stage the Docker build
        run: sbt "project fileSink" docker:stage
      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: snowplow/snowplow-event-generator-file-sink
          tags: |
            type=raw,value=latest,enable=${{ !contains(steps.ver.outputs.tag, 'rc') }}
            type=raw,value=${{ steps.ver.outputs.tag }}
          flavor: |
            latest=false
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Push image
        uses: docker/build-push-action@v2
        with:
          context: modules/loader/target/docker/stage
          file: modules/loader/target/docker/stage/Dockerfile
          platforms: linux/amd64,linux/arm64/v8
          tags: ${{ steps.meta.outputs.tags }}
          push: true

  deploy_common:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: adopt
      - name: Deploy common on Bintray Maven and Maven Central
        run: sbt "project root" ci-release
        env:
          PGP_PASSPHRASE: ${{ secrets.SONA_PGP_PASSPHRASE }}
          PGP_SECRET: ${{ secrets.SONA_PGP_SECRET }}
          SONATYPE_USERNAME: ${{ secrets.SONA_USER }}
          SONATYPE_PASSWORD: ${{ secrets.SONA_PASS }}

  github_release:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: coursier/cache-action@v6
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: adopt
      - name: Get current version
        id: ver
        run: echo "::set-output name=tag::${GITHUB_REF#refs/tags/}"
      - name: Assemble fat jars
        run: sbt "project root; set assembly / test := {}; assembly"
      - name: Create GitHub release and attach artifacts
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          prerelease: ${{ contains(steps.ver.outputs.tag, 'rc') }}
          name: ${{ steps.ver.outputs.tag }}
          tag_name: ${{ steps.ver.outputs.tag }}
          files: |
            modules/loader/target/scala-2.13/snowplow-event-generator-core-${{ steps.ver.outputs.tag }}.jar
            modules/loader/target/scala-2.13/snowplow-event-generator-file-sink-${{ steps.ver.outputs.tag }}.jar

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}